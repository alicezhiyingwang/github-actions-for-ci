# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
#field is what tells GitHub Actions when to run. In this case, we're running the workflow anytime there's a pus

jobs:
  build:
#job 1 with the identifier build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: npm install and build webpack
        run: |
          npm install
          npm run build
      - uses: actions/upload-artifact@main
#Artifacts allow you to persist data after a job has completed, and share that data with another job in the same workflow. 
#An artifact is a file or collection of files produced during a workflow run.
#To upload artifacts to the artifact storage, we can use an action built by GitHub: actions/upload-artifacts.
        with:
          name: webpack artifacts
          path: public/      
  test:
#job 2 with the identifier test
    name: CI node action
    needs: build
  # Configure the test job to run only after the build job is completed
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2016]
        node-version: [12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
  #used to ensure our virtual machine has a copy of our codebase. The checked out code will be used to run tests against.
    - uses: actions/download-artifact@main
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
  #used to set up proper versions of Node.js since we'll be performing testing against multiple versions.
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, and test
      run: |
        npm install
        npm test
      env:
        CI: true
#Workflow: A workflow is a unit of automation from start to finish, including the definition of what triggers the automation, what environment or other aspects should be taken account during the automation, and what should happen as a result of the trigger.
#Job: A job is a section of the workflow, and is made up of one or more steps. In this section of our workflow, the template defines the steps that make up the build job.
#Step: A step represents one effect of the automation. A step could be defined as a GitHub Action, or another unit, like printing something to the console.
#Action: A GitHub Action is a piece of automation written in a way that is compatible with workflows. Actions can be written by GitHub, by the open source community, or you can write them yourself!
